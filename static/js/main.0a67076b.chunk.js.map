{"version":3,"sources":["store/actions.ts","components/Block.tsx","components/Preloader.tsx","components/Article.tsx","components/ArticleList.tsx","App.tsx","store/reducer.ts","utils/index.ts","store/saga.ts","store/index.ts","index.tsx"],"names":["actionTypes","updateArticlesList","articles","type","UPDATE_ARTICLES_LIST","setIsLoading","isLoading","SET_IS_LOADING","mapDispatchToProps","fetchArticles","subreddit","FETCH_ARTICLES","connect","title","onClick","className","Preloader","changeLikeArticle","id","isLiked","CHANGE_LIKE_ARTICEL","deleteArticle","DELETE_ARTICLE","url","likeClickHandler","useCallback","deleteHandler","href","target","state","map","article","key","App","storageItems","localStorage","getItem","initialState","JSON","parse","getRandomIndex","length","randomNumber","Math","random","round","updateStorageArticles","setItem","stringify","getStorageBuffer","storageBuffer","updateStorageBuffer","buffer","runClearBuferTimer","setTimeout","console","log","removeBufferField","removeArticle","watchFetchArticles","watchDeleteArticle","watchChangeLikeArticle","rootSaga","store","getState","put","call","fetch","data","json","children","child","randomIndex","newArticle","splice","name","updatedArticles","performance","now","slice","articleIndex","findIndex","clone","Object","assign","takeLeading","takeEvery","all","sagaMiddleware","createSagaMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","action","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a67076b.chunk.js","sourcesContent":["import { \r\n    IFetchArticleAction, \r\n    IArticle, \r\n    IUpdateArticlesListAction, \r\n    ISetIsLoadingAction,\r\n    IDeleteArticleAction,\r\n    IChangeLikeArticleAction,\r\n} from \"../interfaces\";\r\n\r\nexport enum actionTypes {\r\n    FETCH_ARTICLES = 'FETCH_ARTICLES',\r\n    UPDATE_ARTICLES_LIST = 'UPDATE_ARTICLES_LIST',\r\n    SET_IS_LOADING = 'SET_IS_LOADING',\r\n    DELETE_ARTICLE = 'DELETE_ARTICLE',\r\n    CHANGE_LIKE_ARTICEL = 'CHANGE_LIKE_ARTICLE',\r\n}\r\n\r\nexport const fetchArticles = (subreddit: string): IFetchArticleAction => ({\r\n    type: actionTypes.FETCH_ARTICLES,\r\n    subreddit,\r\n});\r\n\r\nexport const updateArticlesList = (articles: IArticle[]): IUpdateArticlesListAction => ({\r\n    type: actionTypes.UPDATE_ARTICLES_LIST,\r\n    articles,\r\n})\r\n\r\nexport const setIsLoading = (isLoading: boolean): ISetIsLoadingAction => ({\r\n    type: actionTypes.SET_IS_LOADING,\r\n    isLoading,\r\n})\r\n\r\nexport const deleteArticle = (id: string): IDeleteArticleAction => ({\r\n    type: actionTypes.DELETE_ARTICLE,\r\n    id\r\n})\r\n\r\nexport const changeLikeArticle = (id: string, isLiked: boolean): IChangeLikeArticleAction => ({\r\n    type: actionTypes.CHANGE_LIKE_ARTICEL,\r\n    id,\r\n    isLiked\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchArticles } from '../store/actions'\r\nimport { IFetchArticleAction } from '../interfaces';\r\n\r\ntype Props = {\r\n    title: string;\r\n    subreddit: string;\r\n    fetchArticles: (subreddit: string) => IFetchArticleAction;\r\n}\r\n\r\nconst Block: React.FC<Props> = ({ title, subreddit, fetchArticles }) => {\r\n    return (\r\n        <div\r\n            onClick={() => fetchArticles(subreddit)}\r\n            className=\"block\"\r\n        >\r\n            {title}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchArticles\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Block);","import React from 'react';\r\n\r\n\r\nconst Preloader: React.FC = () => (\r\n    <div className=\"preloader_wrapper\">\r\n        <div className=\"preloader_circle\" />\r\n    </div>\r\n)\r\n\r\nexport default Preloader;","import React, { useCallback } from 'react';\r\nimport {\r\n    IArticle,\r\n    IChangeLikeArticleAction,\r\n    IDeleteArticleAction\r\n} from '../interfaces';\r\nimport { changeLikeArticle, deleteArticle } from '../store/actions';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface Props extends IArticle {\r\n    changeLikeArticle: (id: string, isLiked: boolean) => IChangeLikeArticleAction;\r\n    deleteArticle: (id: string) => IDeleteArticleAction;\r\n}\r\n\r\nconst Article: React.FC<Props> = ({ title, url, id, isLiked, changeLikeArticle, deleteArticle }) => {\r\n\r\n    const likeClickHandler = useCallback(() => {\r\n        changeLikeArticle(id, isLiked)\r\n    }, [id, isLiked])\r\n\r\n    const deleteHandler = useCallback(() => {\r\n        deleteArticle(id)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"article\">\r\n            <div onClick={likeClickHandler} className={`like${isLiked ? ' is_liked' : ''}`} />\r\n            <div onClick={deleteHandler} className=\"bucket\" />\r\n            <a href={url} target=\"_blank\">{title}</a>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    changeLikeArticle,\r\n    deleteArticle\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Article);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from './Preloader'\r\nimport Article from './Article';\r\nimport { IArticle } from '../interfaces';\r\nimport { AppSate } from '../store/reducer';\r\n\r\ntype Props = {\r\n    articles: IArticle[];\r\n    isLoading: boolean;\r\n}\r\n\r\nconst ArticleList: React.FC<Props> = ({ articles, isLoading }) => {\r\n    return (\r\n        <>\r\n            {articles.map(article => (\r\n                <Article\r\n                    key={article.id}\r\n                    {...article}\r\n                />\r\n            ))}\r\n            {isLoading && <Preloader />}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppSate) => ({\r\n    articles: state.articles,\r\n    isLoading: state.isLoading,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ArticleList)","import React from 'react';\nimport Block from './components/Block';\nimport ArticleList from './components/ArticleList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"blocks_wrapper\">\n        <Block title=\"Frontend\" subreddit=\"frontend\" />\n        <Block title=\"ReactJs\" subreddit=\"reactjs\" />\n        <Block title=\"VueJs\" subreddit=\"vuejs\" />\n        <Block title=\"Angular\" subreddit=\"angular\" />\n        <ArticleList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { actionTypes } from './actions';\r\nimport { IArticle, AppAction } from '../interfaces';\r\n\r\nconst storageItems = localStorage.getItem('articles')\r\n\r\nconst initialState = {\r\n    articles: storageItems ? JSON.parse(storageItems) : [] as IArticle[],\r\n    isLoading: false,\r\n};\r\n\r\nexport type AppSate = typeof initialState\r\n\r\nexport const reducer = (state: AppSate = initialState, action: AppAction) => {\r\n    switch (action.type) {\r\n        case actionTypes.UPDATE_ARTICLES_LIST:\r\n            return {\r\n                ...state,\r\n                articles: action.articles,\r\n            }\r\n        case actionTypes.SET_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { IArticle, IBuffer } from '../interfaces';\r\n\r\nexport const getRandomIndex = (length: number): number => {\r\n    const randomNumber = Math.random() * length;\r\n    return Math.round(randomNumber);\r\n}\r\n\r\nexport const updateStorageArticles = (articles: IArticle[]): void => {\r\n    localStorage.setItem('articles', JSON.stringify(articles));\r\n}\r\n\r\nexport const getStorageBuffer = (): IBuffer => {\r\n    const storageBuffer = localStorage.getItem('buffer')\r\n    return storageBuffer ? JSON.parse(storageBuffer) : {}\r\n}\r\n\r\nexport const updateStorageBuffer = (buffer: IBuffer): void => {\r\n    localStorage.setItem('buffer', JSON.stringify(buffer));\r\n}\r\n\r\nexport const removeBufferField = (subreddit: string): IBuffer => {\r\n    const storageBuffer = getStorageBuffer();\r\n    console.log(storageBuffer, storageBuffer[subreddit])\r\n    if (storageBuffer[subreddit]) {\r\n        delete storageBuffer[subreddit];\r\n        updateStorageBuffer(storageBuffer);\r\n    }\r\n    return storageBuffer;\r\n}\r\n\r\nexport const runClearBuferTimer = (subreddit: string, buffer: IBuffer): void => {\r\n    setTimeout(() => {\r\n        buffer = removeBufferField(subreddit)\r\n    }, 120000)\r\n}","import { all, call, put, takeLeading, takeEvery } from 'redux-saga/effects';\r\nimport { actionTypes, updateArticlesList, setIsLoading } from './actions';\r\nimport store from './index';\r\nimport { IFetchArticleAction, IBuffer, IDeleteArticleAction, IArticle, IChangeLikeArticleAction } from '../interfaces';\r\nimport { updateStorageArticles, updateStorageBuffer, getStorageBuffer, removeBufferField, runClearBuferTimer, getRandomIndex } from '../utils';\r\n\r\nlet buffer = getStorageBuffer();\r\n\r\nfor (let key in buffer) {\r\n    runClearBuferTimer(key, buffer);\r\n}\r\n\r\nfunction* fetchArticles({ subreddit }: IFetchArticleAction) {\r\n    const articles = store.getState().articles\r\n    yield put(setIsLoading(true));\r\n    console.log(buffer[subreddit]?.length, 'lenght')\r\n    if (!buffer[subreddit]?.length) {\r\n        const data = yield call(fetch, `https://www.reddit.com/r/${subreddit}.json`);\r\n        const json = yield call(() => data.json());\r\n\r\n        buffer[subreddit] = json.data.children.map((child: any) => child.data);\r\n        updateStorageBuffer(buffer);\r\n        runClearBuferTimer(subreddit, buffer);\r\n    }\r\n    const randomIndex = getRandomIndex(buffer[subreddit].length - 1)\r\n    console.log(randomIndex, 'index')\r\n    const newArticle = buffer[subreddit].splice(randomIndex, 1)[0];\r\n    console.log(newArticle, 'new article')\r\n    const { title, url, name } = newArticle;\r\n\r\n    const updatedArticles = [\r\n        ...articles,\r\n        { title, url, id: `${name}_${performance.now()}`, isLiked: false }\r\n    ];\r\n\r\n    yield put(updateArticlesList(updatedArticles));\r\n\r\n    updateStorageArticles(updatedArticles);\r\n    updateStorageBuffer(buffer);\r\n    yield put(setIsLoading(false));\r\n}\r\n\r\nfunction* changeLikeArticle({ id, isLiked }: IChangeLikeArticleAction) {\r\n    const articles = store.getState().articles.slice();\r\n    let articleIndex = articles.findIndex((article: IArticle) => article.id === id)\r\n    if (articleIndex !== -1) {\r\n        const clone = Object.assign({}, articles[articleIndex], { isLiked: !isLiked });\r\n        articles.splice(articleIndex, 1, clone)\r\n\r\n        yield put(updateArticlesList(articles));\r\n\r\n        updateStorageArticles(articles);\r\n    }\r\n}\r\n\r\nfunction* removeArticle({ id }: IDeleteArticleAction) {\r\n    const articles = store.getState().articles.slice();\r\n    let articleIndex = articles.findIndex((article: IArticle) => article.id === id)\r\n    if (articleIndex !== -1) {\r\n        articles.splice(articleIndex, 1)\r\n\r\n        yield put(updateArticlesList(articles));\r\n\r\n        updateStorageArticles(articles);\r\n    }\r\n}\r\n\r\nfunction* watchFetchArticles() {\r\n    yield takeLeading(actionTypes.FETCH_ARTICLES, fetchArticles)\r\n}\r\n\r\nfunction* watchDeleteArticle() {\r\n    yield takeEvery(actionTypes.DELETE_ARTICLE, removeArticle)\r\n}\r\n\r\nfunction* watchChangeLikeArticle() {\r\n    yield takeEvery(actionTypes.CHANGE_LIKE_ARTICEL, changeLikeArticle)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchFetchArticles(),\r\n        watchChangeLikeArticle(),\r\n        watchDeleteArticle(),\r\n    ])\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { reducer } from './reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancer = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeEnhancer(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}